name: Monitor Render Server

permissions:
  contents: write

on:
  schedule:
    - cron: '*/10 * * * *'  # Every 2 minutes (UTC)
  workflow_dispatch:

jobs:
  check-render:
    runs-on: ubuntu-latest

    steps:
      - name: Log actual UTC start time
        run: echo "Started at $(date -u)"

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check /uptime endpoint
        id: ping
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" --max-time 70 https://main-backend-b3ak.onrender.com/uptime)
          EXIT_CODE=$?
          if [ $EXIT_CODE -ne 0 ]; then
            STATUS="timeout"
          else
            STATUS="$RESPONSE"
          fi
          echo "STATUS=$STATUS" >> $GITHUB_ENV
          echo "Server returned HTTP status: $STATUS"

      - name: Update status.json
        run: |
          TIMESTAMP=$(TZ=Asia/Kolkata date +"%b %d, %Y %I:%M:%S %p IST")
          echo "{\"status\":\"$STATUS\",\"timestamp\":\"$TIMESTAMP\"}" > status.json
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Commit and push only if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          STATUS: ${{ env.STATUS }}
          TIMESTAMP: ${{ env.TIMESTAMP }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add status.json

          if ! git diff --cached --quiet; then
            git commit -m "Update status.json: status=$STATUS at $TIMESTAMP"
            git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
            git push origin HEAD:main
          else
            echo "No change in status.json. Skipping commit."
          fi
